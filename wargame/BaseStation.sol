
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import 'gamingObject.sol';
// This is class that describes you smart contract.
contract BaseStation is gamingObject {
    mapping (address => uint) WarUnitMapping;
    gamingObject[] UnitAddressArray;
    
    function setHP(uint BaseStationHP) private {
        tvm.accept();
        HP = BaseStationHP;
    }
    function addWarUnit(gamingObject warUnitAddress) public checkOwnerAndAccept{
        UnitAddressArray.push(warUnitAddress);
        uint key = UnitAddressArray.length;
        WarUnitMapping[warUnitAddress] = key;
    }
    function deleteWarUnit(address warUnitAddress) external override checkOwnerAndAccept{
        uint deleteKey = WarUnitMapping[warUnitAddress];
        delete UnitAddressArray[deleteKey];
    }
    function deathBase() public checkOwnerAndAccept{
        deathAHAHAH();
        for (uint i; i <= UnitAddressArray.length - 1; i++) {
            UnitAddressArray[i].deathBecauseofBase();
        }
    }
}