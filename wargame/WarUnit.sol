
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import 'gamingObject.sol';
import 'interfaceGamingObject.sol';
import 'BaseStation.sol';
// This is class that describes you smart contract.
contract WarUnit is gamingObject {
    gamingObject UnitBaseStation;
    uint public attackPower;
    
    function attack(interfaceGamingObject attackAddress) internal checkOwnerAndAccept{
        attackAddress.getAttack(attackPower);
    }
    function getAttackPower() public checkOwnerAndAccept returns(uint) {
        return attackPower;
    }
    function getHP() public override checkOwnerAndAccept returns(uint){
        return HP;
    }
    function deathUnit() internal checkOwnerAndAccept {
        address WarUnitAddress = address(this);
        UnitBaseStation.deleteWarUnit(WarUnitAddress);
        deathAHAHAH();
    }
    function deathBecauseofBase() external {
        tvm.accept();
        require(msg.sender == UnitBaseStation, 102);
        deathAHAHAH();
    }
}